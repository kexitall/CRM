package crm;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author kexital
 */
public class AScrollList extends JScrollPane {

//    needed for def constructor. Because when panel
//    appears it must already show somethig to prevent user to be puzzled
//    with empty list. Panel should show something. In this case Contacts of
//    the first firm in firm list.

// TODO condition: firmList must chose first firm record to anable this featre
   
    private String firmContacts[];      
    private int recPerFirm;
    private int firmID;   
    
    public static JPanel panel;
    public static FlowLayout layout;
    /**
     * Creates new JPanel that represents Scrollable contacts list
     */
    public AScrollList (){
        initComponents();
        
    }
    public AScrollList (int firmID){
        this.firmID = firmID;
        initComponents();
        paint(this.firmID);
        
    }
    public AScrollList(FirmCard card) {
        firmID = card.getFirmID();
        initComponents();
        paint(firmID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

       panel = new javax.swing.JPanel();
       layout = new FlowLayout();
       
        
       panel.setLayout(layout);
       panel.add(new ContactCard(1));
       
        
       this.setViewportView(panel);
        }
     public void paint(int firmID) {    // TODO код try должен составлять отдельный метод в классе ContactCard или типа того.. тут ему не место
         panel.removeAll();
             panel.setLayout(layout);
                      
             try {
                 LocDbProvider.contaсtsData.first();
                     while (!LocDbProvider.contaсtsData.isAfterLast()) {
                        if ((LocDbProvider.contaсtsData.getInt(7))==firmID)  {
                            panel.add(new ContactCard(                         // 7 not used here as it is firmID
                                    LocDbProvider.contaсtsData.getInt(1),      // ID- not shows at card
                                    LocDbProvider.contaсtsData.getString(2),   // firsstName
                                    LocDbProvider.contaсtsData.getString(3),   // LastName
                                    LocDbProvider.contaсtsData.getString(4),   // FatherName
                                    LocDbProvider.contaсtsData.getString(9),    // tel
                                    LocDbProvider.contaсtsData.getString(10),   // email
                                    LocDbProvider.contaсtsData.getString(8),    // depart
                                    LocDbProvider.contaсtsData.getString(5),   // posit
                                    LocDbProvider.contaсtsData.getString(6))); // TODO для "creator" пока не имеет метода отображения  
                        }
                        LocDbProvider.contaсtsData.next();
                     }
                      
                      
                    }
              
            
            catch (SQLException ex) {
                 Logger.getLogger(AScrollList.class.getName()).log(Level.SEVERE, null, ex);
             }
             this.setPreferredSize(new Dimension(1100, 1100));
          //   panel.setPreferredSize(new Dimension(800-20, 300-20));
             panel.setVisible(true);
             this.setViewportView(panel);
             
        }
        // </editor-fold>
        
        }

    // </editor-fold>
    
   
    
    

